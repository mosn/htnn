syntax = "proto3";

package api.v1;

import "validate/validate.proto";

option go_package = "mosn.io/moe/api/v1";

message StringMatcher {
  oneof match_pattern {
    option (validate.required) = true;

    // The input string must match exactly the string specified here.
    //
    // Examples:
    //
    // * ``abc`` only matches the value ``abc``.
    string exact = 1;

    // The input string must have the prefix specified here.
    // Note: empty prefix is not allowed, please use regex instead.
    //
    // Examples:
    //
    // * ``abc`` matches the value ``abc.xyz``
    string prefix = 2 [(validate.rules).string = {min_len: 1}];

    // The input string must have the suffix specified here.
    // Note: empty prefix is not allowed, please use regex instead.
    //
    // Examples:
    //
    // * ``abc`` matches the value ``xyz.abc``
    string suffix = 3 [(validate.rules).string = {min_len: 1}];

    // The input string must match the regular expression specified here.
    // The syntax of the regular expressions accepted is the syntax accepted by RE2.
    string regex = 4 [(validate.rules).string = {min_len: 1}];

    // The input string must have the substring specified here.
    // Note: empty contains match is not allowed, please use regex instead.
    //
    // Examples:
    //
    // * ``abc`` matches the value ``xyz.abc.def``
    string contains = 5 [(validate.rules).string = {min_len: 1}];
  }

  // If true, indicates the matching should be case insensitive.
  // For example, the matcher ``data`` will match both input string ``Data`` and ``data`` if set to true.
  bool ignore_case = 6;
}

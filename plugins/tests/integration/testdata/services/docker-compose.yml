services:
  # names in alphabetical order
  aimockservices:
    build:
      context: ./ai_content_security
      dockerfile_inline: |
        FROM python:3.11-slim
        WORKDIR /app
        RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        COPY app.py .
        EXPOSE 10901 10902
        CMD ["python", "app.py"]
    ports:
      - "10901:10901"
      - "10902:10902"
    environment:
      - UNHEALTHY_WORDS=violence,hate,porn,abuse,toxic,harmful
      - LLM_PORT=10901
      - AUDIT_PORT=10902
    restart: unless-stopped
    volumes:
      - ./ai_content_security/app.py:/app/app.py  # 挂载本地文件到容器
    healthcheck:
      test: [ "CMD", "sh", "-c", "curl -f http://localhost:10901/health && curl -f http://localhost:10902/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      service:
  hydra:
    image: oryd/hydra:v2.2.0-rc.3
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./hydra
        target: /etc/config/hydra
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      service:
  hydra-consent:
    image: oryd/hydra-login-consent-node:v2.2.0-rc.3
    ports:
      - "3000:3000"
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    command: serve
    restart: unless-stopped
    networks:
      service:
  hydra-migrate:
    image: oryd/hydra:v2.2.0-rc.3
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./hydra
        target: /etc/config/hydra
    restart: on-failure
    networks:
      service:

  opa:
    image: openpolicyagent/opa:0.58.0
    restart: unless-stopped
    ports:
      - "8181:8181"
    command: run -s /test.rego
    volumes:
      - type: bind
        source: ./opa/test.rego
        target: /test.rego
    networks:
      service:

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "6380:6380"
    volumes:
      - ./certs:/certs
    command: "--user user on +@all ~* \\&* \\>passwd \
            --tls-port 6380 \
            --tls-cert-file /certs/server.crt \
            --tls-key-file /certs/server.key \
            --tls-ca-cert-file /certs/ca.crt \
            --tls-auth-clients no \
            "
    networks:
      service:

  redis-cluster-0:
    image: docker.io/bitnami/redis-cluster:7.0
    restart: unless-stopped
    volumes:
      - ./certs:/certs
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-cluster-0 redis-cluster-1 redis-cluster-2'
      - 'REDIS_TLS_ENABLED=yes'
      - 'REDIS_TLS_CERT_FILE=/certs/server.crt'
      - 'REDIS_TLS_KEY_FILE=/certs/server.key'
      - 'REDIS_TLS_CA_FILE=/certs/ca.crt'
      - 'REDIS_TLS_AUTH_CLIENTS=no'
    ports:
      - '6400:6379'
    networks:
      service:

  redis-cluster-1:
    image: docker.io/bitnami/redis-cluster:7.0
    restart: unless-stopped
    volumes:
      - ./certs:/certs
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_NODES=redis-cluster-0 redis-cluster-1 redis-cluster-2'
      - 'REDIS_TLS_ENABLED=yes'
      - 'REDIS_TLS_CERT_FILE=/certs/server.crt'
      - 'REDIS_TLS_KEY_FILE=/certs/server.key'
      - 'REDIS_TLS_CA_FILE=/certs/ca.crt'
      - 'REDIS_TLS_AUTH_CLIENTS=no'
    ports:
      - '6401:6379'
    networks:
      service:

  redis-cluster-2:
    image: docker.io/bitnami/redis-cluster:7.0
    restart: unless-stopped
    volumes:
      - ./certs:/certs
    depends_on:
      - redis-cluster-0
      - redis-cluster-1
    environment:
      - 'ALLOW_EMPTY_PASSWORD=yes'
      - 'REDIS_CLUSTER_REPLICAS=0'
      - 'REDIS_CLUSTER_CREATOR=yes'
      - 'REDIS_NODES=redis-cluster-0 redis-cluster-1 redis-cluster-2'
      - 'REDIS_TLS_ENABLED=yes'
      - 'REDIS_TLS_CERT_FILE=/certs/server.crt'
      - 'REDIS_TLS_KEY_FILE=/certs/server.key'
      - 'REDIS_TLS_CA_FILE=/certs/ca.crt'
      - 'REDIS_TLS_AUTH_CLIENTS=no'
    ports:
      - '6402:6379'
    networks:
      service:


networks:
  service:

volumes:
  hydra-sqlite:

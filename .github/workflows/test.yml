name: test

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - "site/**"
    - "**/*.md"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
    - "site/**"
    - "**/*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

env:
  IN_CI: true

jobs:
  unit-test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Test
      run: make unit-test
    - name: Upload to codecov
      if: always() # always upload coverage, so the coverage percents won't affect by the failed tests
      uses: codecov/codecov-action@v4.0.1
      with:
        fail_ci_if_error: false # let CI build pass if Codecov runs into an error during upload
        file: ./cover.out
        flags: unit-test
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  plugins-integration-test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Set up services
      run: |
        make start-service

    - name: Build
      run: make build-test-so

    - name: Test
      run: make plugins-integration-test
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        # upload artifact can be found in https://github.com/mosn/htnn/actions/runs/$id
        name: ci-logs
        path: ./test-envoy
    - name: Generate coverage
      if: always()
      run: |
        go tool covdata textfmt -i=/tmp/htnn_coverage -o plugins/tests/integration/cover.out -v 2
    - name: Upload to codecov
      if: always()
      uses: codecov/codecov-action@v4.0.1
      with:
        fail_ci_if_error: false # let CI build pass if Codecov runs into an error during upload
        file: plugins/tests/integration/cover.out
        flags: plugins-integration-test
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  controller-test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./controller
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: binary cache
      uses: actions/cache@v4
      with:
        path: ./controller/bin
        key: ${{ runner.os }}-${{ hashFiles('./controller/Makefile') }}

    - name: Set up services
      run: |
        make start-controller-service

    - name: Test
      run: make test
    - name: Upload to codecov
      if: always()
      uses: codecov/codecov-action@v4.0.1
      with:
        fail_ci_if_error: false # let CI build pass if Codecov runs into an error during upload
        file: ./controller/cover.out
        flags: controller-test
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
